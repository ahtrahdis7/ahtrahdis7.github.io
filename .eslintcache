[{"/Users/sidhartha7/portfolio/src/index.js":"1","/Users/sidhartha7/portfolio/src/components/Experience.js":"2","/Users/sidhartha7/portfolio/src/components/About.js":"3","/Users/sidhartha7/portfolio/src/components/Projects.js":"4","/Users/sidhartha7/portfolio/src/screens/main.js":"5","/Users/sidhartha7/portfolio/src/components/Social.js":"6","/Users/sidhartha7/portfolio/src/registerServiceWorker.js":"7","/Users/sidhartha7/portfolio/src/App.js":"8","/Users/sidhartha7/portfolio/src/reportWebVitals.js":"9","/Users/sidhartha7/portfolio/src/components/ExperienceData.js":"10"},{"size":608,"mtime":1611695178891,"results":"11","hashOfConfig":"12"},{"size":4693,"mtime":1611774475368,"results":"13","hashOfConfig":"12"},{"size":7241,"mtime":1611774250813,"results":"14","hashOfConfig":"12"},{"size":678,"mtime":1611774576262,"results":"15","hashOfConfig":"12"},{"size":4085,"mtime":1611774813612,"results":"16","hashOfConfig":"12"},{"size":1327,"mtime":1611774286628,"results":"17","hashOfConfig":"12"},{"size":4270,"mtime":1611693756741,"results":"18","hashOfConfig":"12"},{"size":190,"mtime":1611693756732,"results":"19","hashOfConfig":"12"},{"size":362,"mtime":1611693756741,"results":"20","hashOfConfig":"12"},{"size":820,"mtime":1611769927776,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1f31g2k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sidhartha7/portfolio/src/index.js",[],["46","47"],"/Users/sidhartha7/portfolio/src/components/Experience.js",["48"],"import React from 'react'\nimport {\n    Typography,\n    // Card,\n    // Paper\n    Container,\n    Card\n} from '@material-ui/core';\n// import terminal from '../images/terminal.png'\nimport { ExpData } from './ExperienceData';\nimport { Divider } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n// const Tasks = (props) => {\n//     const [show, setShow] = React.useState(false);\n\n//     if(show) {\n//         return(\n//             <div>True</div>\n//         )\n//     } else {\n//         return(\n//             <div>False</div>\n//         )\n//     }\n// }\n\nclass ExpCard extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            show: false,\n            // data: props.exp\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick = () => {\n        this.setState(prevState => {\n            return{\n                show: !prevState.show\n            }\n        })\n    }\n\n    render() {\n        const exp = this.props.exp;\n        return(\n            <Card key={exp.key} onClick={this.handleClick} style={{\n                padding: 10,\n                margin: 10\n            }} >\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between'\n                }}>\n                    <Typography style={{\n                        fontFamily: 'ComicNeue',\n                        color: '#293863'\n                    }} variant=\"h6\">{exp.company}</Typography>\n                    <Typography style={{\n                        fontFamily: 'ComicNeue',\n                        color: '#293863'\n                    }} variant=\"h7\">{exp.from} - {exp.to}</Typography>\n                </div>\n                <div>\n                    <Typography style={{\n                        fontFamily: 'ComicNeue',\n                        color: 'grey'\n                    }} variant=\"h6\" >{exp.position}</Typography>\n                </div>\n                {\n                    this.state.show ? (\n                        <div style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'flex-start',\n                        }}>\n                            <Divider />\n                            {\n                                exp.tasks.map(task => { return (<Typography style={{\n                                    fontFamily: 'ComicNeue',\n                                    color: 'grey'\n                                }} variant=\"h7\" >{task}</Typography>) })\n                            }\n                            <Divider />\n                        </div>\n                    ):(<div></div>)\n                }\n                {\n                    this.state.show ? (\n                        <div style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            alignItems: 'flex-start',\n                            flexWrap: 'wrap',\n                        }}>\n                            {\n                                exp.techstack.map(stack => {return(<Typography style={{\n                                    fontFamily: 'ComicNeue',\n                                    color: 'grey',\n                                    marginLeft: 5\n                                }} variant=\"h7\">{stack}</Typography>)})\n                            }\n                        </div>\n                    ):(<div style={{\n                        textAlign: 'center'\n                    }}>\n                        <ArrowDropDownIcon style={{color: 'grey'}} />\n                    </div>)\n                }\n\n\n            </Card>\n        )\n    }\n}\n\nclass Experience extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n\n    async componentDidMount (){\n\n    }\n    render() {\n        console.log(ExpData)\n        return(\n            <div style={{\n                marginTop: '1cm',\n                marginBottom: '1cm'\n            }}>\n                <Container>\n                    <Typography style={{\n                        fontFamily: 'ComicNeue',\n                        color: 'grey',\n                        marginBottom: '1cm'\n                    }} variant=\"h4\" >Work Experience</Typography>\n                    {\n                        ExpData.map((exp) =>  {\n                            return <ExpCard exp={exp} />\n                        })\n                    }\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Experience;\n","/Users/sidhartha7/portfolio/src/components/About.js",[],"/Users/sidhartha7/portfolio/src/components/Projects.js",[],"/Users/sidhartha7/portfolio/src/screens/main.js",[],"/Users/sidhartha7/portfolio/src/components/Social.js",[],"/Users/sidhartha7/portfolio/src/registerServiceWorker.js",[],"/Users/sidhartha7/portfolio/src/App.js",[],["49","50"],"/Users/sidhartha7/portfolio/src/reportWebVitals.js",[],["51","52"],"/Users/sidhartha7/portfolio/src/components/ExperienceData.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":18,"column":21,"nodeType":"59","endLine":18,"endColumn":66},{"ruleId":"53","replacedBy":"60"},{"ruleId":"55","replacedBy":"61"},{"ruleId":"53","replacedBy":"62"},{"ruleId":"55","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["64"],["65"],["64"],["65"],"no-global-assign","no-unsafe-negation"]