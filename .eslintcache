[{"/Users/sidhartha7/ahtrahdis7.github.io/src/App.js":"1","/Users/sidhartha7/ahtrahdis7.github.io/src/components/Social.js":"2","/Users/sidhartha7/ahtrahdis7.github.io/src/components/About.js":"3","/Users/sidhartha7/ahtrahdis7.github.io/src/components/Experience.js":"4","/Users/sidhartha7/ahtrahdis7.github.io/src/screens/main.js":"5","/Users/sidhartha7/ahtrahdis7.github.io/src/components/Projects.js":"6","/Users/sidhartha7/ahtrahdis7.github.io/src/reportWebVitals.js":"7","/Users/sidhartha7/ahtrahdis7.github.io/src/components/ExperienceData.js":"8","/Users/sidhartha7/ahtrahdis7.github.io/src/registerServiceWorker.js":"9","/Users/sidhartha7/ahtrahdis7.github.io/src/index.js":"10"},{"size":190,"mtime":1619414941209,"results":"11","hashOfConfig":"12"},{"size":4774,"mtime":1619504320945,"results":"13","hashOfConfig":"12"},{"size":11107,"mtime":1620801223597,"results":"14","hashOfConfig":"12"},{"size":5425,"mtime":1617983059766,"results":"15","hashOfConfig":"12"},{"size":4393,"mtime":1619414941210,"results":"16","hashOfConfig":"12"},{"size":678,"mtime":1617981195395,"results":"17","hashOfConfig":"12"},{"size":362,"mtime":1617981195421,"results":"18","hashOfConfig":"12"},{"size":780,"mtime":1617981195395,"results":"19","hashOfConfig":"12"},{"size":4270,"mtime":1617981195421,"results":"20","hashOfConfig":"12"},{"size":608,"mtime":1617981195419,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9ksx2q",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/sidhartha7/ahtrahdis7.github.io/src/App.js",[],["48","49"],"/Users/sidhartha7/ahtrahdis7.github.io/src/components/Social.js",["50","51","52","53","54"],"/Users/sidhartha7/ahtrahdis7.github.io/src/components/About.js",["55"],"import React from 'react'\nimport ProfilePic from './prf.jpeg';\nimport {\n    Typography,\n    // Card,\n    // Paper,\n    Container,\n    Grid,\n    Divider\n} from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\n// import rn from '../tech_Icons/RN.png'\n// import aws from '../tech_Icons/aws.png'\n// import expo from '../tech_Icons/expo.png'\n// import html from '../tech_Icons/html.png'\n// import css3 from '../tech_Icons/css3.png'\n// import js from '../tech_Icons/js.png'\n// import java from '../tech_Icons/java.png'\n// import redux from '../tech_Icons/redux.png'\n// import nav from '../tech_Icons/nav.png'\n// import mmui from '../tech_Icons/mmui.png'\n// import node from '../tech_Icons/node.png'\n// import react from '../tech_Icons/react.png'\n// import flask from '../tech_Icons/flask.png'\n// import cpp from '../tech_Icons/c++.png'\n// import mui from '../tech_Icons/mui.png'\n// import mongo from '../tech_Icons/mongo.png'\n// import tfjs from '../tech_Icons/tfjs.png'\nimport Social from './Social';\n\nfunction Stacks(){\n    return(\n        <div>\n            <Grid container style={{\n                    textAlign: 'center',\n                    marginTop: 20,\n                }}>\n                <Grid item xs={12} md={3} >\n                <Typography style={{\n                        color: '#c2c2c2',\n                        fontFamily: 'ComicNeue',\n                        marginTop: 10,\n                    }} variant=\"h5\">\n                        Databases<br></br> <Chip label=\"MongoDB\" size=\"small\"/> <Chip label=\"MySQL\" size=\"small\"/> <Chip label=\"PostgreSQL\" size=\"small\"/> \n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <Typography style={{\n                        color: '#c2c2c2',\n                        fontFamily: 'ComicNeue',\n                        marginTop: 10,\n                    }} variant=\"h5\">\n                        Languages <br></br> \n                        <Chip label=\"C++\" size=\"small\"/> <Chip label=\"JavaScript\" size=\"small\"/> <Chip label=\"Golang\" size=\"small\"/> <Chip label=\"Python\" size=\"small\"/>\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <Typography style={{\n                        color: '#c2c2c2',\n                        fontFamily: 'ComicNeue',\n                        marginTop: 10,\n                    }} variant=\"h5\">\n                        Libraries <br></br> \n                        <Chip label=\"React\" size=\"small\" /> <Chip label=\"React Native\" size=\"small\"/> <Chip label=\"Redux\" size=\"small\"/> <Chip label=\"Pandas\" size=\"small\"/>\n                        {/* <Chip label=\"NumPy\" size=\"small\"/> <Chip label=\"SciPy\" size=\"small\"/>  */}\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <Typography style={{\n                        color: '#c2c2c2',\n                        fontFamily: 'ComicNeue',\n                        marginTop: 10,\n                    }} variant=\"h5\">\n                        Frameworks <br></br> \n                        <Chip label=\"TensorFlow\" size=\"small\"/> <Chip label=\"Express.js\" size=\"small\"/> <Chip label=\"Flask\" size=\"small\"/> <Chip label=\"Expo\" size=\"small\"/> \n                    </Typography>\n                </Grid>\n            </Grid>\n            \n\n        </div>\n    )\n}\n\nclass About extends React.Component {\n\n    render() {\n        return(\n            <div style={{\n                marginTop: '2cm',\n                marginBottom: '1cm',\n                // padding: 5,\n            }}>\n                {/* <Typography variant=\"h1\" style={{\n                    fontFamily: 'ComicNeue'\n                }}>About</Typography> */}\n                <Container style={{\n                    marginBottom: '1cm'\n                }}>\n                    <Grid container>\n                        <Grid item xs={12} md={6}>\n                            <div style={{\n                                textAlign: 'center',\n                                    // marginTop: 10,\n                                    // padding: 10,\n                                    // marginLeft: 40,\n                            }}>\n                                <img src={ProfilePic} height=\"400\" width=\"400\" alt='prof' />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div style={{\n                                    // flex: 1,\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    // alignItems: 'flex-start',\n                                    justifyContent: 'center',\n                                    height: 400,\n                                    // paddingTop: 10,\n                                    // paddingBottom: 10,\n                            }}>\n                                <Typography variant=\"h5\" style={{\n                                    color: '#c2c2c2',\n                                    fontFamily: 'ComicNeue'\n                                }}>Hey There,</Typography>\n                                <Typography variant=\"h2\" style={{\n                                color: '#c2c2c2',\n                                fontFamily: 'ComicNeue'\n                                }}>I'm <span style={{color: '#293863'}}>Sidhartha</span> </Typography>\n                                <Typography variant=\"h4\" style={{\n                                    color: '#c2c2c2',\n                                    fontFamily: 'ComicNeue'\n                                }}>Full Stack Javascript Developer</Typography>\n                                {/* <Typography variant=\"h4\" style={{\n                                    color: '#c2c2c2',\n                                    fontFamily: 'ComicNeue'\n                                }}>React and React Native</Typography> */}\n                                <Typography variant=\"h5\" style={{\n                                    color: '#c2c2c2',\n                                    fontFamily: 'ComicNeue'\n                                }}>MLops, Fitness AI, Android/iOS</Typography>\n                                <Typography variant=\"h5\" style={{\n                                    color: '#c2c2c2',\n                                    fontFamily: 'ComicNeue'\n                                }}>Freelancer</Typography>\n                                <Typography variant=\"h6\" style={{\n                                    color: '#c2c2c2',\n                                    fontFamily: 'ComicNeue'\n                                }}>With a keen inclination towards the open source ecosystem.</Typography>\n                                <Typography variant=\"h6\" style={{\n                                    color: '#c2c2c2',\n                                    fontFamily: 'ComicNeue',\n                                    // textAlign: 'center',\n                                }}>Developed India's first, fully functional, computer vision based fitness app on android.</Typography>\n                                <Social />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    \n                </Container>\n                {/* <Divider variant='fullWidth' /> */}\n                <Container>\n                    <div style={{\n                        // paddingLeft: '10%',\n                        // paddingRight: '10%',\n                        // marginBottom: '1cm',\n                        // marginTop: '1cm',\n                    }}>\n                        {/* <Typography variant=\"h5\" style={{\n                            color: '#c2c2c2',\n                            fontFamily: 'ComicNeue',\n                            // textAlign: 'center',\n                        }}>Developed India's first fully functional computer vision based fitness app on android.</Typography> */}\n                        {/* <Divider /> */}\n                        <Typography variant=\"h6\" \n                            style={{\n                                fontFamily: 'ComicNeue',\n                                textAlign: 'justify',\n                                color: '#c2c2c2',\n                                // fontWeight: 500,\n                            }}> I have experience in developing Android/iOS RN Apps, Web Apps, REST apis using nodejs and flask,\n                                developing and deploying Machine Learning Models using tensorflow.js.\n                                I am always intrigued by and ready to work new technologies.\n                                Computer Vision and Conversational AI interests me a lot.\n                                I am accquainted with Neural Networks, Deep Learning Algorithms, Machine Learning Algorithms and more.\n                        </Typography>\n                    </div>\n                    {/* <hr class=\"solid\" style={{\n                        borderTop: 0.5,\n                        borderRight: 0,\n                        borderLeft: 0\n                    }}></hr> */}\n                    <Stacks />\n                    {/* <br></br> */}\n                    {/* <div style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        justifyContent: 'space-around',\n                        flexWrap: 'wrap',\n                        padding: 10,\n                        paddingLeft: '10%',\n                        paddingRight: '10%',\n                    }}> */}\n                        {/* <img src={js} height=\"60\" width=\"60\" alt='js' /> */}\n                        {/* <img src={html} height=\"60\" width=\"60\" /> */}\n                        {/* <img src={tfjs} height=\"80\" width=\"140\"  alt=\"tfjs\" /> */}\n                        {/* <img src={expo} height=\"60\" width=\"80\" alt='expo' /> */}\n                        {/* <img src={aws} height=\"60\" width=\"80\" alt='aws' /> */}\n                        {/* <img src={rn} height=\"60\" width=\"60\" /> */}\n                        {/* <img src={react} height=\"80\" width=\"110\" alt='react' /> */}\n                        {/* <img src={java} height=\"60\" width=\"60\" /> */}\n                        {/* <img src={mongo} height=\"60\" width=\"150\" alt=\"mongo\" /> */}\n                        {/* <img src={flask} height=\"60\" width=\"60\" alt=\"flask\" /> */}\n                        {/* <img src={mui} height=\"80\" width=\"80\"  alt='mui'/> */}\n                        {/* <img src={mmui} height=\"60\" width=\"100\" /> */}\n                        {/* <img src={redux} height=\"60\" width=\"60\" alt='redux' /> */}\n                        {/* <img src={cpp} height=\"60\" width=\"60\" /> */}\n                        {/* <img src={nav} height=\"60\" width=\"60\" alt='nav' /> */}\n                        {/* <img src={node} height=\"80\" width=\"100\" /> */}\n                    {/* </div> */}\n                    {/* <img src={node} height=\"80\" width=\"80\" /> */}\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default About;\n","/Users/sidhartha7/ahtrahdis7.github.io/src/components/Experience.js",["56","57","58"],"import React from 'react'\nimport {\n    Typography,\n    // Card,\n    // Paper\n    Container,\n    Card\n} from '@material-ui/core';\n// import terminal from '../images/terminal.png'\nimport { ExpData } from './ExperienceData';\nimport { Divider } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\n\nclass ExpCard extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            show: true,\n            // data: props.exp\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick = () => {\n        this.setState(prevState => {\n            return{\n                show: !prevState.show\n            }\n        })\n    }\n\n    render() {\n        const exp = this.props.exp;\n        return(\n            <Card key={exp.key} style={{\n                padding: 10,\n                margin: 0\n            }} raised={true} >\n                <div style={{\n\n                }}>\n                    <Typography style={{\n                        fontFamily: 'ComicNeue',\n                        color: '#293863'\n                    }} variant=\"h6\">{exp.company}</Typography>\n                    <Typography style={{\n                        fontFamily: 'ComicNeue',\n                        color: 'grey'\n                    }} variant=\"h6\" >{exp.position}</Typography>\n                </div>\n                {\n                    this.state.show ? (\n                        <div style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            // alignItems: 'flex-start',\n                        }}>\n                            {\n                                exp.tasks.map(task => { return (<Typography style={{\n                                    fontFamily: 'ComicNeue',\n                                    color: 'grey'\n                                }} variant=\"h7\" >{task}</Typography>) })\n                            }\n                        </div>\n                    ):(<div></div>)\n                }\n                {\n                    this.state.show ? (\n                        <div style={{\n                            // display: 'flex',\n                            // flexDirection: 'row',\n                            // alignItems: 'flex-start',\n                            // flexWrap: 'wrap',\n                        }}>\n                            {\n                                exp.techstack.map(stack => {return(<Typography style={{\n                                    fontFamily: 'ComicNeue',\n                                    color: 'greyblue',\n                                    marginLeft: 1\n                                }} variant=\"h7\">{stack},</Typography>)})\n                            }\n                        </div>\n                    ):(<div style={{\n                        textAlign: 'center'\n                    }}>\n                        <ArrowDropDownIcon style={{color: 'grey'}} />\n                    </div>)\n                }\n\n\n            </Card>\n        )\n    }\n}\n\n\nclass Experience extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n\n    async componentDidMount (){\n\n    }\n    render() {\n        console.log(ExpData)\n        return(\n            <div style={{\n                marginTop: '1cm',\n                marginBottom: '1cm'\n            }}>\n                <Container>\n                    <Typography style={{\n                        fontFamily: 'ComicNeue',\n                        color: 'grey',\n                        marginBottom: '1cm'\n                    }} variant=\"h4\" >Work Experience</Typography>\n                    <Timeline align=\"alternate\">\n                        {\n                            ExpData.map((exp) =>  {\n                                return (\n                                    <TimelineItem>\n                                        <TimelineOppositeContent>\n                                            <Typography color={exp.key%2 == 0 ? \"primary\" : \"secondary\"}>{exp.from}</Typography>\n                                        </TimelineOppositeContent>\n                                        <TimelineSeparator>\n                                            <TimelineDot variant=\"outlined\" color={exp.key%2 == 0 ? \"primary\" : \"secondary\"} />\n                                            <TimelineConnector />\n                                        </TimelineSeparator>\n                                        <TimelineContent>\n                                            <ExpCard exp={exp} />\n                                        </TimelineContent>\n                                    </TimelineItem>\n                                )\n                            })\n                        }\n                    </Timeline>\n                    \n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Experience;\n","/Users/sidhartha7/ahtrahdis7.github.io/src/screens/main.js",["59","60"],"/Users/sidhartha7/ahtrahdis7.github.io/src/components/Projects.js",[],"/Users/sidhartha7/ahtrahdis7.github.io/src/reportWebVitals.js",[],["61","62"],"/Users/sidhartha7/ahtrahdis7.github.io/src/components/ExperienceData.js",[],"/Users/sidhartha7/ahtrahdis7.github.io/src/registerServiceWorker.js",[],["63","64"],"/Users/sidhartha7/ahtrahdis7.github.io/src/index.js",[],["65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":12,"column":8,"nodeType":"73","messageId":"74","endLine":12,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":29,"column":57,"nodeType":"77","endLine":29,"endColumn":72},{"ruleId":"75","severity":1,"message":"76","line":30,"column":74,"nodeType":"77","endLine":30,"endColumn":89},{"ruleId":"75","severity":1,"message":"76","line":32,"column":67,"nodeType":"77","endLine":32,"endColumn":82},{"ruleId":"75","severity":1,"message":"76","line":33,"column":86,"nodeType":"77","endLine":33,"endColumn":101},{"ruleId":"71","severity":1,"message":"78","line":9,"column":5,"nodeType":"73","messageId":"74","endLine":9,"endColumn":12},{"ruleId":"71","severity":1,"message":"78","line":11,"column":10,"nodeType":"73","messageId":"74","endLine":11,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":135,"column":74,"nodeType":"81","messageId":"82","endLine":135,"endColumn":76},{"ruleId":"79","severity":1,"message":"80","line":138,"column":94,"nodeType":"81","messageId":"82","endLine":138,"endColumn":96},{"ruleId":"71","severity":1,"message":"83","line":11,"column":8,"nodeType":"73","messageId":"74","endLine":11,"endColumn":18},{"ruleId":"71","severity":1,"message":"84","line":12,"column":8,"nodeType":"73","messageId":"74","endLine":12,"endColumn":16},{"ruleId":"67","replacedBy":"85"},{"ruleId":"69","replacedBy":"86"},{"ruleId":"67","replacedBy":"87"},{"ruleId":"69","replacedBy":"88"},{"ruleId":"67","replacedBy":"89"},{"ruleId":"69","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Medium' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Divider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Experience' is defined but never used.","'Projects' is defined but never used.",["91"],["92"],["91"],["92"],["91"],["92"],"no-global-assign","no-unsafe-negation"]